{"version":3,"sources":["components/landing/landing.js","components/register/register.js","components/login/login.js","utils/checkBlank.js","components/questions/images/keepGoing.jpeg","components/questions/images/smiley.jpeg","components/questions/questions.js","components/summary/summary.js","App.js","reportWebVitals.js","index.js"],"names":["landing","Helmet","className","to","href","target","rel","Register","useState","registerIdInput","setregisterIdInput","registerPasswordInput","setregisterPasswordInput","type","id","onChange","e","value","placeholder","onClick","Axios","post","userId","userPassword","then","response","data","message","alert","window","location","console","log","Login","loginIdInput","setloginIdInput","loginPasswordInput","setloginPasswordInput","defaults","withCredentials","useEffect","get","user","localStorage","setItem","uid","fail","length","day","getItem","checkBlank","undefined","Object","keys","trim","QuestionsPage","props","endTest","state","dailyScore","score","a","response_1","scoreMessage","JSON","parse","setTimeout","userStats","numberOfQuestions","numberOfAnsweredQuestions","history","push","removeItem","handleOptionClick","element","innerHTML","split","saveScore","document","getElementById","modalImg","keepGoingImg","smileyImg","setState","prevState","currentQuestionIndex","nextQuestion","showQuestions","questions","currentQuestion","previousQuestion","closeModalFn","handleButtonClick","handleExitButtonClick","confirm","nextButtonDisabled","previousButtonDisabled","closeModal","this","style","visibility","modalVisibility","opacity","modalOpacity","src","alt","title","question","optionA","reverse","optionB","optionC","optionD","optionE","Component","Summary","link","text","stats","relaxImg","showStressLevel","scoreFromServer","calculatePreviousDay","result","App","exact","path","component","Landing","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4c1eff18.chunk.js","sourcesContent":["import { React, Fragment } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* Creating landing component for the landing page */\r\nfunction landing() {\r\n  return (\r\n    <Fragment>\r\n      {/* Using Helmet to provide page's title */}\r\n      <Helmet>\r\n        <title>Stress Scale</title>\r\n      </Helmet>\r\n      <div className=\"container landing-container\">\r\n        <div className=\"wrapper landing-nav-wrapper\">\r\n          {/* Giving the logo on the landing page */}\r\n          <div className=\"logo\"></div>\r\n\r\n          {/* List of link buttons for navigation  */}\r\n          <ul className=\"nav-list\">\r\n            <Link to=\"/login\">\r\n              <li className=\"list-item\">Login</li>\r\n            </Link>\r\n            <Link to=\"register\">\r\n              <li className=\"list-item\">Register</li>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Footer with links */}\r\n        <div className=\"wrapper landing-footer-wrapper\">\r\n          <ul className=\"footer-nav-list\">\r\n            <label>Helpful links:</label>\r\n            <a\r\n              href=\"https://www.healthline.com/nutrition/16-ways-relieve-stress-anxiety\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <li className=\"footer-list-item\">\r\n                16 Simple Ways to Relieve Stress and Anxiety\r\n              </li>\r\n            </a>\r\n            <a\r\n              href=\"https://www.mentalhealth.org.uk/publications/how-manage-and-reduce-stress\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <li className=\"footer-list-item\">\r\n                How to manage and reduce stress\r\n              </li>\r\n            </a>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default landing;\r\n","import { React, Fragment, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\n/* Creating the 'register' component */\r\nfunction Register() {\r\n  const [registerIdInput, setregisterIdInput] = useState(\"\");\r\n  const [registerPasswordInput, setregisterPasswordInput] = useState(\"\");\r\n\r\n  /* Handaling the Login functionalities with reg() */\r\n  const reg = () => {\r\n\t  if (!registerIdInput) {\r\n\t\t alert(\"No id\") \r\n\t\t return;\r\n\t  }\r\n\t  if (!registerPasswordInput) {\r\n\t\t  alert(\"No password\")\r\n\t\t  return;\r\n\t  }\r\n    Axios.post(\"/api/register\", {\r\n      userId: registerIdInput,\r\n      userPassword: registerPasswordInput,\r\n    }).then((response) => {\r\n      if (\r\n        response.data.message ===\r\n        \"User already exists, please choose a different User ID.\"\r\n      ) {\r\n        alert(response.data.message);\r\n      } else if (\r\n        response.data.message ===\r\n        \"User registered successfully. Please Login to continue!\"\r\n      ) {\r\n        alert(response.data.message);\r\n        window.location = \"/\";\r\n      } else {\r\n        alert(\"Sorry, some error occured!\");\r\n        console.log(response.data.message);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Stress Scale</title>\r\n      </Helmet>\r\n      <div className=\"container landing-container\">\r\n        <div className=\"wrapper landing-nav-wrapper\">\r\n          <div className=\"logo\"></div>\r\n          <div className=\"form register-form\">\r\n            {/* Setting up the ID and Password for sending to server */}\r\n            <input\r\n              type=\"text\"\r\n              id=\"registerIdInput\"\r\n              onChange={(e) => {\r\n                setregisterIdInput(e.target.value);\r\n              }}\r\n              placeholder=\"Enter your User ID...\"\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              id=\"registerPasswordInput\"\r\n              onChange={(e) => {\r\n                setregisterPasswordInput(e.target.value);\r\n              }}\r\n              placeholder=\"Enter your Password...\"\r\n            />\r\n            <ul className=\"nav-list\">\r\n              {/* Calling reg() function on clicking the button */}\r\n              <Link onClick={reg}>\r\n                <li className=\"list-item\">Register</li>\r\n              </Link>\r\n            </ul>\r\n          </div>\r\n          {/* Link to go back to landing page */}\r\n          <Link to=\"/\">\r\n            <button className=\"btn btn-form btn-register\">Go back</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"wrapper landing-footer-wrapper\">\r\n          <ul className=\"footer-nav-list\">\r\n            <label>Helpful links:</label>\r\n            <a\r\n              href=\"https://www.healthline.com/nutrition/16-ways-relieve-stress-anxiety\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <li className=\"footer-list-item\">\r\n                16 Simple Ways to Relieve Stress and Anxiety\r\n              </li>\r\n            </a>\r\n            <a\r\n              href=\"https://www.mentalhealth.org.uk/publications/how-manage-and-reduce-stress\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <li className=\"footer-list-item\">\r\n                How to manage and reduce stress\r\n              </li>\r\n            </a>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import { React, Fragment, useState, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\n/* Creating the 'login' component */\r\nfunction Login() {\r\n  const [loginIdInput, setloginIdInput] = useState(\"\");\r\n  const [loginPasswordInput, setloginPasswordInput] = useState(\"\");\r\n\r\n  /* Enabling Axios withCredentials to be able to use sessions */\r\n  Axios.defaults.withCredentials = true;\r\n\r\n  /* Handaling the Login functionalities with log() */\r\n  const log = () => {\r\n    Axios.post(\"/api/login\", {\r\n      userId: loginIdInput,\r\n      userPassword: loginPasswordInput,\r\n    }).then((response) => {\r\n      if (response.data.message === \"User Id and Password combination wrong!\") {\r\n        alert(response.data.message);\r\n      } else if (response.data.fail) {\r\n        alert(response.data.fail);\r\n      } else {\r\n\t\t  console.log(\"Post login response\", response.data)\r\n        localStorage.setItem(\"userId\", response.data.message[0].uid);\r\n\t\t// access last array element for the latest day\r\n\t\tif (response.data.message[response.data.message.length - 1].day === null) {\r\n\t\t\t// Nuser logs in for the first time as sushc no day. Set it to day 1\r\n\t\t\tlocalStorage.setItem(\"day\", 1)\r\n\t\t} else {\r\n\t\t\t// We have the PREVIOUS day. Increment by one to current day\r\n\t\t\tlocalStorage.setItem(\"day\", response.data.message[response.data.message.length - 1].day + 1)\r\n\t\t}\r\n        // let userId = response.data.message[0].uid;\r\n        let userId = localStorage.getItem(\"userId\");\r\n        alert(\"Welcome \" + userId);\r\n        console.log(response.data.message);\r\n        // window.location = \"/questions?uid=\" + userId;\r\n        window.location = \"/questions\";\r\n      }\r\n    });\r\n  };\r\n\r\n  /* Using useEffect() to send get request to backend server  and store logged in user's user Id in local storage */\r\n  useEffect(() => {\r\n    Axios.get(\"/api/login\").then((response) => {\r\n      // console.log(response.data.user[0].uid);\r\n      if (response.data.user) {\r\n        localStorage.setItem(\"userId\", response.data.user.uid);\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Stress Scale</title>\r\n      </Helmet>\r\n      <div className=\"container landing-container\">\r\n        <div className=\"wrapper landing-nav-wrapper\">\r\n          <div className=\"logo\"></div>\r\n          <div className=\"form login-form\">\r\n            {/* Setting up the ID and Password for sending to server */}\r\n            <input\r\n              type=\"text\"\r\n              id=\"loginIdInput\"\r\n              onChange={(e) => {\r\n                setloginIdInput(e.target.value);\r\n              }}\r\n              placeholder=\"Enter your User ID...\"\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              id=\"loginPasswordInput\"\r\n              onChange={(e) => {\r\n                setloginPasswordInput(e.target.value);\r\n              }}\r\n              placeholder=\"Enter your Password...\"\r\n            />\r\n            <ul className=\"nav-list\">\r\n              {/* Calling log() function on clicking the button */}\r\n              <Link onClick={log}>\r\n                <li className=\"list-item\">Login and take test</li>\r\n              </Link>\r\n            </ul>\r\n          </div>\r\n          {/* Link to go back to landing page */}\r\n          <Link to=\"/\">\r\n            <button type=\"button\" className=\"btn btn-form btn-login\">\r\n              Go Back\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"wrapper landing-footer-wrapper\">\r\n          <ul className=\"footer-nav-list\">\r\n            <label>Helpful links:</label>\r\n            <a\r\n              href=\"https://www.healthline.com/nutrition/16-ways-relieve-stress-anxiety\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <li className=\"footer-list-item\">\r\n                16 Simple Ways to Relieve Stress and Anxiety\r\n              </li>\r\n            </a>\r\n            <a\r\n              href=\"https://www.mentalhealth.org.uk/publications/how-manage-and-reduce-stress\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <li className=\"footer-list-item\">\r\n                How to manage and reduce stress\r\n              </li>\r\n            </a>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","const checkBlank = (value) =>\r\n  value === undefined ||\r\n  value == null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nexport default checkBlank;\r\n","export default __webpack_public_path__ + \"static/media/keepGoing.f5cacf02.jpeg\";","export default __webpack_public_path__ + \"static/media/smiley.c57e7058.jpeg\";","import { React, Component, Fragment } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nimport questions from \"../../data.json\";\r\nimport checkBlank from \"../../utils/checkBlank\";\r\n\r\nimport keepGoingImg from \"./images/keepGoing.jpeg\";\r\nimport smileyImg from \"./images/smiley.jpeg\";\r\nimport axios from \"axios\";\r\n\r\nclass QuestionsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    /* Creating the state and declaring it's variables */\r\n    this.state = {\r\n      questions: questions,\r\n      currentQuestionIndex: 0,\r\n      currentQuestion: {},\r\n      nextQuestion: {},\r\n      previousQuestion: {},\r\n      nextButtonDisabled: false,\r\n      previousButtonDisabled: false,\r\n      numberOfQuestions: questions.length,\r\n      numberOfAnsweredQuestions: 0,\r\n      score: 0,\r\n      saveScore: 0,\r\n      closeModal: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    /* Extracting variables from state and showing the questions */\r\n    const { questions, currentQuestion, nextQuestion, previousQuestion } =\r\n      this.state;\r\n    this.showQuestions(\r\n      questions,\r\n      currentQuestion,\r\n      nextQuestion,\r\n      previousQuestion\r\n    );\r\n  }\r\n\r\n  /* Defining the showQuestions function */\r\n  showQuestions(\r\n    questions = this.state.questions,\r\n    currentQuestion,\r\n    nextQuestion,\r\n    previousQuestion\r\n  ) {\r\n    if (!checkBlank(this.state.questions)) {\r\n      let currentQuestionIndex = this.state.currentQuestionIndex;\r\n      questions = this.state.questions;\r\n      currentQuestion = questions[currentQuestionIndex];\r\n      nextQuestion = questions[currentQuestionIndex + 1];\r\n      previousQuestion = questions[currentQuestionIndex - 1];\r\n\r\n      /* Changing/setting the state */\r\n      this.setState({\r\n        currentQuestion,\r\n        nextQuestion,\r\n        previousQuestion,\r\n      });\r\n    } else {\r\n      alert(\"Blank/undefined data!\");\r\n    }\r\n  }\r\n\r\n  /* Creating the endTest() function for finishing test */\r\n  endTest = () => {\r\n    const { state } = this;\r\n\t// First we add the score\r\n\t\r\n\tAxios.post(\"api/addScore\", {\r\n\t\tuserId: localStorage.getItem(\"userId\"),\r\n\t\tdailyScore: state.score,\r\n\t\tday: localStorage.getItem(\"day\")\r\n\t}).then(async (response) => {\r\n\t\t// After the score is added return all the days(if any)\r\n\t\tconst response_1 = await Axios.post(\"/api/showScore\", {\r\n\t\t\tuserId: localStorage.getItem(\"userId\"),\r\n\t\t\tdailyScore: state.score,\r\n\t\t\tday: localStorage.getItem(\"day\")\r\n\t\t});\r\n\t\tconsole.log(\"reposne from show score \", response_1);\r\n\t\t/* Setting the local storage variable for 'scoreMessage */\r\n\t\tif (response_1.data.scoreMessage) {\r\n\t\t\tlocalStorage.setItem(\"scoreMessage\", response_1.data.scoreMessage);\r\n\t\t} else {\r\n\t\t\t// Sanity check\r\n\t\t\talert(\"No score from server\");\r\n\t\t\tlocalStorage.setItem(\"scoreMessage\", null);\r\n\t\t}\r\n\t\tconsole.log(JSON.parse(localStorage.getItem(\"scoreMessage\")));\r\n\t\talert(\"The test has concluded.\");\r\n\t})\r\n\r\n\r\n    /* Setting timeout of 500ms so that the incoming data cna be loaded */\r\n    setTimeout(() => {\r\n      const userStats = {\r\n        userId: localStorage.getItem(\"userId\"),\r\n        score: state.score,\r\n        numberOfQuestions: state.numberOfQuestions,\r\n        numberOfAnsweredQuestions: state.numberOfAnsweredQuestions,\r\n        scoreMessage: JSON.parse(localStorage.getItem(\"scoreMessage\")),\r\n      };\r\n      console.log(userStats);\r\n      this.props.history.push(\"/summary\", userStats);\r\n      localStorage.removeItem(\"userId\");\r\n    }, 500);\r\n  };\r\n\r\n  /* Handaling the clicks on different options with handleOptionClick() */\r\n  handleOptionClick = (e) => {\r\n    let element = e.target;\r\n    if (element.innerHTML === \"never\") {\r\n      if (element.id.split(\"__\")[1] === \"false\") {\r\n        this.saveScore = 0;\r\n      } else {\r\n        this.saveScore = 4;\r\n      }\r\n    } else if (element.innerHTML === \"almost never\") {\r\n      if (element.id.split(\"__\")[1] === \"false\") {\r\n        this.saveScore = 1;\r\n      } else {\r\n        this.saveScore = 3;\r\n      }\r\n    } else if (element.innerHTML === \"sometimes\") {\r\n      if (element.id.split(\"__\")[1] === \"false\") {\r\n        this.saveScore = 2;\r\n      } else {\r\n        this.saveScore = 2;\r\n      }\r\n    } else if (element.innerHTML === \"fairly often\") {\r\n      if (element.id.split(\"__\")[1] === \"false\") {\r\n        this.saveScore = 3;\r\n      } else {\r\n        this.saveScore = 1;\r\n      }\r\n    } else if (element.innerHTML === \"very often\") {\r\n      if (element.id.split(\"__\")[1] === \"false\") {\r\n        this.saveScore = 4;\r\n      } else {\r\n        this.saveScore = 0;\r\n      }\r\n    }\r\n\r\n    /* Showing or hiding modal */\r\n    if (this.state.numberOfAnsweredQuestions % 3 === 0) {\r\n      document.getElementById(\"modal\").className = \"show\";\r\n    } else {\r\n      document.getElementById(\"modal\").className = \"hide\";\r\n    }\r\n\r\n    /* Handling different images for different scenarios */\r\n    if (this.state.score >= 26) {\r\n      this.modalImg = keepGoingImg;\r\n    } else if (this.state.score >= 13 && this.state.score < 26) {\r\n      this.modalImg = smileyImg;\r\n    } else if (this.state.score > 8 && this.state.score < 13) {\r\n      this.modalImg = smileyImg;\r\n    }\r\n\r\n    /* Setting the state */\r\n    this.setState(\r\n      (prevState) => ({\r\n        score: prevState.score + this.saveScore,\r\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1,\r\n      }),\r\n      /* Exisiting the questions page */\r\n      () => {\r\n        if (this.state.nextQuestion === undefined) {\r\n          this.endTest();\r\n        } else {\r\n          this.showQuestions(\r\n            this.state.questions,\r\n            this.state.currentQuestion,\r\n            this.state.nextQuestion,\r\n            this.state.previousQuestion\r\n          );\r\n        }\r\n      }\r\n    );\r\n    // }\r\n  };\r\n\r\n  /* Handaling closing modal on clicking close(x) button */\r\n  closeModalFn = (e) => {\r\n    document.getElementById(\"modal\").className = \"hide\";\r\n  };\r\n\r\n  /* Handaling 'Exit' button click */\r\n  handleButtonClick = (e) => {\r\n    switch (e.target.id) {\r\n      case \"exit-button\":\r\n        this.handleExitButtonClick();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  /* Handaling 'Exit' button click */\r\n  handleExitButtonClick = () => {\r\n    window.confirm(\"Are you sure you want to exit out of the stress test?\");\r\n    this.endTest();\r\n  };\r\n\r\n  render() {\r\n    const { currentQuestion } = this.state;\r\n    if (localStorage.getItem(\"userId\") !== null) {\r\n      return (\r\n        <Fragment>\r\n          <Helmet>\r\n            <title>Stress Scale</title>\r\n          </Helmet>\r\n          <div className=\"container questions-container\">\r\n            <div\r\n              id=\"modal\"\r\n              style={{\r\n                visibility: this.modalVisibility,\r\n                opacity: this.modalOpacity,\r\n              }}\r\n            >\r\n              <span className=\"modal-close\" onClick={this.closeModalFn}>\r\n                X\r\n              </span>\r\n              <div className=\"modalImg\">\r\n                {this.modalImg ? (\r\n                  <img src={this.modalImg} alt=\"#\" className=\"modalPic\" />\r\n                ) : (\r\n                  ``\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"wrapper\">\r\n              <div className=\"question-block\">\r\n                <p\r\n                  id={currentQuestion.id}\r\n                  className=\"question\"\r\n                  title={currentQuestion.question}\r\n                >\r\n                  {currentQuestion.question}\r\n                </p>\r\n              </div>\r\n              <div className=\"answer-block\">\r\n                <p\r\n                  id={\r\n                    currentQuestion.id +\r\n                    \"-\" +\r\n                    currentQuestion.optionA +\r\n                    \"__\" +\r\n                    currentQuestion.reverse\r\n                  }\r\n                  className=\"option\"\r\n                  onClick={this.handleOptionClick}\r\n                >\r\n                  {currentQuestion.optionA}\r\n                </p>\r\n                <p\r\n                  id={\r\n                    currentQuestion.id +\r\n                    \"-\" +\r\n                    currentQuestion.optionB +\r\n                    \"__\" +\r\n                    currentQuestion.reverse\r\n                  }\r\n                  className=\"option\"\r\n                  onClick={this.handleOptionClick}\r\n                >\r\n                  {currentQuestion.optionB}\r\n                </p>\r\n                <p\r\n                  id={\r\n                    currentQuestion.id +\r\n                    \"-\" +\r\n                    currentQuestion.optionC +\r\n                    \"__\" +\r\n                    currentQuestion.reverse\r\n                  }\r\n                  className=\"option\"\r\n                  onClick={this.handleOptionClick}\r\n                >\r\n                  {currentQuestion.optionC}\r\n                </p>\r\n                <p\r\n                  id={\r\n                    currentQuestion.id +\r\n                    \"-\" +\r\n                    currentQuestion.optionD +\r\n                    \"__\" +\r\n                    currentQuestion.reverse\r\n                  }\r\n                  className=\"option\"\r\n                  onClick={this.handleOptionClick}\r\n                >\r\n                  {currentQuestion.optionD}\r\n                </p>\r\n                <p\r\n                  id={\r\n                    currentQuestion.id +\r\n                    \"-\" +\r\n                    currentQuestion.optionE +\r\n                    \"__\" +\r\n                    currentQuestion.reverse\r\n                  }\r\n                  className=\"option\"\r\n                  onClick={this.handleOptionClick}\r\n                >\r\n                  {currentQuestion.optionE}\r\n                </p>\r\n              </div>\r\n              <div className=\"buttons-block\">\r\n                <button\r\n                  id=\"exit-button\"\r\n                  className=\"btn btn-close\"\r\n                  onClick={this.handleButtonClick}\r\n                >\r\n                  Exit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Helmet>\r\n            <title>Stress Scale</title>\r\n          </Helmet>\r\n          <div className=\"container questions-container\">\r\n            <h1>\r\n              You are not logged in! Please <Link to=\"/\">go to homepage</Link>{\" \"}\r\n              and login to continue.\r\n            </h1>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default QuestionsPage;\r\n","import { React, Fragment, Component } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* Creating 'Summary' component */\r\nclass Summary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    /* Defining the state of the app */\r\n    this.state = {\r\n      userId: \"\",\r\n      score: 0,\r\n      numberOfQuestions: 0,\r\n      numberOfAnsweredQuestions: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { state } = this.props.location;\r\n\r\n    /* Setting the present state */\r\n    this.setState = {\r\n      userId: state.userId,\r\n      score: state.score,\r\n      numberOfQuestions: state.numberOfQuestions,\r\n      numberOfAnsweredQuestions: state.numberOfAnsweredQuestions,\r\n      scoreMessage: state.scoreMessage,\r\n\t  link: \"\",\r\n\t  text: \"\"\r\n    };\r\n  }\r\n  render() {\r\n    console.log(localStorage.getItem(\"userId\"));\r\n    console.log(\r\n      \"scoreMessage from summary\",\r\n      JSON.parse(localStorage.getItem(\"scoreMessage\"))\r\n    );\r\n    console.log(this.props.location.state);\r\n\r\n    /* Setting the state and other variables */\r\n    const { state } = this.props.location;\r\n    let stats, link, text, relaxImg\r\n\r\n    /* Setting the gifs according to present score */\r\n\t\t// Array of day, score for curent user\r\n\t\tconst scoreFromServer = JSON.parse(localStorage.getItem(\"scoreMessage\"))\r\n\t\tlet showStressLevel;\r\n\r\n\tif (this.state.score > -1 && this.state.score < 14) {\r\n\t\ttext = \"Ways to Manage Stress\";\r\n\t\tlink = \"https://www.webmd.com/balance/stress-management/stress-management\";\r\n\t\trelaxImg = \"https://media4.giphy.com/media/pmONR25D6YmkI2qHVg/giphy.gif\"\r\n\t\tshowStressLevel = (\r\n\t\t\t<>\r\n\t\t\t\t<p className=\"score\">Stress level is low</p>\r\n\t\t\t\t<p className=\"score\">You have no reason to worry. Your stress levels are under control 🎉</p>\r\n\t\t\t\t{calculatePreviousDay(scoreFromServer, this.state)}\r\n\t\t\t</>\r\n\t\t)\r\n\r\n\t} else if (this.state.score > 13 && this.state.score < 27) {\r\n\t\ttext = \"How to manage and reduce stress\";\r\n\t\tlink = \"https://www.mentalhealth.org.uk/publications/how-manage-and-reduce-stress\";\r\n\t\trelaxImg = \"https://media3.giphy.com/media/2csuIJj6TmuKA/giphy.webp\"\r\n\r\n\t\tshowStressLevel = (\r\n\t\t\t<>\r\n\t\t\t\t<p className=\"score\">Stress level is moderate</p>\r\n\t\t\t\t<p className=\"score\">You have a moderate stress level. Need to work on a few things 🦾</p>\r\n\t\t\t\t{calculatePreviousDay(scoreFromServer, this.state)}\r\n\t\t\t</>\r\n\t\t)\r\n\t} else {\r\n\t\ttext = \"16 Simple Ways to Relieve Stress and Anxiety\";\r\n\t\tlink = \"https://www.healthline.com/nutrition/16-ways-relieve-stress-anxiety\";\r\n\t\trelaxImg = \"https://media4.giphy.com/media/dDXZ3qU5nRBIe82Uit/giphy.gif\"\r\n\t\r\n\t\tshowStressLevel = (\r\n\t\t\t<>\r\n\t\t\t\t<p className=\"score\">Stress level is hight</p>\r\n\t\t\t\t<p className=\"score\">You need to relax, my friend! You have a high stress level 🤯</p>\r\n\t\t\t\t{calculatePreviousDay(scoreFromServer, this.state)}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n    if (state !== undefined) {\r\n      stats = (\r\n        <Fragment>\r\n          <p className=\"wrapper stats-wrapper\">\r\n            <p className=\"test-over\">\r\n              You have successfully completed the test ✅\r\n            </p>\r\n            <img className=\"relaxImg\" src={relaxImg} alt=\"relax\" />\r\n            {showStressLevel}\r\n            <div className=\"wrapper landing-footer-wrapper summary-footer-wrapper\">\r\n              <ul className=\"footer-nav-list\">\r\n                <label>Helpful links:</label>\r\n                <a\r\n                  href=\"https://www.nhs.uk/mental-health/self-help/guides-tools-and-activities/tips-to-reduce-stress/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <li className=\"footer-list-item\">10 stress busters</li>\r\n                </a>\r\n                <a href={link} target=\"_blank\" rel=\"noreferrer\">\r\n                  <li className=\"footer-list-item\">{text}</li>\r\n                </a>\r\n              </ul>\r\n            </div>\r\n            <div className=\"stats-details\">\r\n              <div>\r\n                <p>Total number of questions:{\" \" + state.numberOfQuestions}</p>\r\n                <p>\r\n                  Total number of questions answered:\r\n                  {\" \" + state.numberOfAnsweredQuestions}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <Link to=\"/\">\r\n                  <button className=\"btn btn-form\">Exit to Homepage</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\t\t  </p>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      stats = (\r\n        <Fragment>\r\n          <div className=\"wrapper stats-wrapper\">\r\n            <h1>Test results not available</h1>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Helmet>\r\n          <title>Stress Scale</title>\r\n        </Helmet>\r\n        <div className=\"container summary-container\">{stats}</div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Summary;\r\nfunction calculatePreviousDay(result, state) {\r\n\tconsole.log(\"Result in calclcuate previous day\", result)\r\n\tconsole.log(\"State in calclcuate previous day\", state)\r\n\tif (localStorage.getItem(\"day\") < 1) {\r\n\t\t// Sanity check\r\n\t\talert(\"Day is less than 1\");\r\n\t} else if (localStorage.getItem(\"day\") == 1) {\r\n\t\t// Do nothing use the mesage below.\r\n\t} else {\r\n\t\t// More than 1 day compare previous day result\r\n\t\tif (result[result.length - 2].score > result[result.length - 1].score) {\r\n\t\t\treturn (<p className=\"score\">{\"Well done 👍🏼 your score has gone down since yesterday by \" + (result[result.length - 2].score - result[result.length - 1].score)}</p>)\r\n\t\t} else if (result[result.length - 2].score == state.score) {\r\n\t\t\treturn (<p className=\"score\">\"Your score is equal to that of yesterday. Below are some links to help you with any stress you are having.\"</p>)\r\n\t\t} else {\r\n\t\t\treturn (<p className=\"score\">{\"Your scores have increased by \" + (result[result.length - 1].score - result[result.length - 2].score) + \". You need to take it easy by taking a walk or doing some breathing exercises\"}</p>)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport './App.css';\nimport Landing from \"./components/landing/landing\";\nimport Register from \"./components/register/register\";\nimport Login from \"./components/login/login\";\nimport QuestionsPage from \"./components/questions/questions\";\nimport Summary from \"./components/summary/summary\";\n\n\n/* Creating the App */\nfunction App() {\n  return (\n    /* Handaling routes to different paths */\n    <Router>\n      <Route exact path=\"/\" component={Landing}></Route>\n      <Route exact path=\"/register\" component={Register}></Route>\n      <Route exact path=\"/login\" component={Login}></Route>\n      <Route exact path=\"/questions\" component={QuestionsPage}></Route>\n      <Route exact path=\"/summary\" component={Summary}></Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}